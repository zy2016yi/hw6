clc;
clear;
m=0.01;var1=0.01;
pi1=imread('lena.bmp');
po1=imnoise(pi1,'gaussian',m,var1);
figure;
subplot(1,2,1)
imshow(pi1)
title('原始图像');
subplot(1,2,2)
imshow(po1)
title(['增加方差为',num2str(m),'均值为',num2str(var1),'高斯噪声']);
% saveas(gcf,'1.png')

w1=fspecial('gaussian');%高斯平滑滤波
po2=imfilter(po1,w1);



w2=fspecial('laplacian');
po3=imfilter(po1,w2);



w3=fspecial('average');
po4=imfilter(po1,w3);

figure;
subplot(2,2,1)
imshow(po1)
title('含高斯噪声图像');

subplot(2,2,2)
imshow(po2)
title('经过高斯平滑滤波图像');

subplot(2,2,3)
imshow(po3)
title('经过拉普拉斯平滑滤波图像');

subplot(2,2,4)
imshow(po4)
title('经过均值平滑滤波图像');

% saveas(gcf,'2.png')



clc;
clear;
m=0.01;var1=0.01;
pi1=imread('lena.bmp');
px1=imnoise(pi1,'salt & pepper',0.1);
px2=imnoise(pi1,'salt & pepper',0.2);
px3=imnoise(pi1,'salt & pepper',0.3);
figure;
subplot(2,2,1)
imshow(pi1)
title('原始图像');
subplot(2,2,2)
imshow(px1)
title('增加椒盐噪声图片 参数0.1');
subplot(2,2,3)
imshow(px2)
title('增加椒盐噪声图片 参数0.2');
subplot(2,2,4)
imshow(px3)
title('增加椒盐噪声图片 参数0.3');
saveas(gcf,'3.png')

po1=px1;
w1=fspecial('gaussian');%高斯均值滤波
po2=imfilter(po1,w1);

q=-1.5;m=2;n=2                  %逆谐波均值滤波器
[g,revevtClass] = tofloat(po1);

f = imfilter(g.^(q+1),ones(m,n),'replicate');
f=f./(imfilter(g.^(q),ones(m,n),'replicate')+eps);

po3=f;

q=+1.5;m=2;n=2                  %逆谐波均值滤波器
[g,revevtClass] = tofloat(po1);

f = imfilter(g.^(q+1),ones(m,n),'replicate');
f=f./(imfilter(g.^(q),ones(m,n),'replicate')+eps);

po5=f;



w3=fspecial('average');%均值滤波
po4=imfilter(po1,w3);

figure;

subplot(2,2,1)
imshow(po2)
title('经过高斯均值滤波图像');

subplot(2,2,3)
imshow(po3)
title('经过逆谐波-1.5滤波图像');

subplot(2,2,2)
imshow(po4)
title('经过均值平滑滤波图像');

subplot(2,2,4)
imshow(po5)
title('经过逆谐波+1.5滤波图像');

saveas(gcf,'4.png')

% fspecial('motion',len,theta)



clc;clear;
f=imread('lena.bmp');

F=fft2(f);
T=1;a=2;b=2;

for u=1:size(f,1)
    for v = 1:size(f,2)

H(u,v)=T./(pi*(u*a+v*b))*sin(pi*(u*a+v*b))*exp(complex(0,pi*(u*a+v*b)));
G(u,v)=H(u,v).*F(u,v);
    end
end

g=ifft2(G);
g=g(1:size(f,1),1:size(f,2));

g1=imnoise(g,'gaussian',10/(512.^2),0);
F1=fft2(g1);

 K=0.02
for u=1:size(f,1)
    for v = 1:size(f,2)

H(u,v)=T./(pi*(u*a+v*b))*sin(pi*(u*a+v*b))*exp(complex(0,pi*(u*a+v*b)));
G(u,v)=(1./H(u,v)).*(det(H(u,v)).^2)./(det(H(u,v)).^2+K).*F1(u,v);
    end
end
g3=ifft2(G);
g3=g3(1:size(f,1),1:size(f,2));
% figure;
% imshow(g3,[]);
figure;
subplot(2,2,1)
imshow(f)
title('原图');

subplot(2,2,2)
imshow(g,[])
title('经过5.6-11公式滤波滤波图像');
subplot(2,2,3)
imshow(g1,[])
title('在模糊图像基础上增加高斯噪声');
subplot(2,2,4)
imshow(g3,[])
title('使用维纳恢复图像');
saveas(gcf,'5.png')

p=[0,-1,0;-1,4,-1;0,-1,0];
F1  = psf2otf(g1,[512,512]);
P  = psf2otf(p,[512,512]);
k1=0.01;
for u=1:size(f,1)
    for v = 1:size(f,2)

H(u,v)=T./(pi*(u*a+v*b))*sin(pi*(u*a+v*b))*exp(complex(0,pi*(u*a+v*b)));

```
end
```

end
N1=conj(H);
N2=(H);
N3=(P);
G=(N1./((N2.^2)+k1.*(N3).^2)).*F1;
% 
g4=ifft2(G);
% g4 = otf2psf(G,[512,512]);
g4=g4(1:size(f,1),1:size(f,2));

figure;
subplot(2,2,1)
imshow(f)
title('原图');

subplot(2,2,2)
imshow(g,[])
title('经过5.6-11公式滤波滤波图像');
subplot(2,2,3)
imshow(g1,[])
title('在模糊图像基础上增加高斯噪声');
subplot(2,2,4)
imshow(g4,[])
title('使用最小二乘恢复图像');
saveas(gcf,'6.png')



clc;clear;
f=imread('lena.bmp');

F=fft2(f);
T=1;a=2;b=2;

for u=1:size(f,1)
    for v = 1:size(f,2)

H(u,v)=T./(pi*(u*a+v*b))*sin(pi*(u*a+v*b))*exp(complex(0,pi*(u*a+v*b)));
G(u,v)=H(u,v).*F(u,v);
    end
end

g=ifft2(G);
g=g(1:size(f,1),1:size(f,2));

g1=imnoise(g,'gaussian',10/(512.^2),0);
F1=fft2(g1);

 K=0.02
for u=1:size(f,1)
    for v = 1:size(f,2)

H(u,v)=T./(pi*(u*a+v*b))*sin(pi*(u*a+v*b))*exp(complex(0,pi*(u*a+v*b)));
G(u,v)=(1./H(u,v)).*(det(H(u,v)).^2)./(det(H(u,v)).^2+K).*F1(u,v);
    end
end
g3=ifft2(G);
g3=g3(1:size(f,1),1:size(f,2));
% figure;
% imshow(g3,[]);
figure;
subplot(2,2,1)
imshow(f)
title('原图');

subplot(2,2,2)
imshow(g,[])
title('经过5.6-11公式滤波滤波图像');
subplot(2,2,3)
imshow(g1,[])
title('在模糊图像基础上增加高斯噪声');
subplot(2,2,4)
imshow(g3,[])
title('使用维纳恢复图像');
saveas(gcf,'5.png')

p=[0,-1,0;-1,4,-1;0,-1,0];
F1= fft2(g1,512,512);
P  = fft2(p,512,512);
for k1=0:0.001:0.05
;for u=1:size(f,1)
    for v = 1:size(f,2)

H(u,v)=T./(pi*(u*a+v*b))*sin(pi*(u*a+v*b))*exp(complex(0,pi*(u*a+v*b)));

```
end
```

end
N1=conj(H);
N2=(H);
N3=(P);
G=(N1./((N2.^2)+k1.*(N3.^2))).*F1;
% 
g4=ifft2(G);
% g4 = otf2psf(G,[512,512]);
g4=g4(1:size(f,1),1:size(f,2));

figure;
subplot(2,2,1)
imshow(f)
title('原图');

subplot(2,2,2)
imshow(g,[])
title('经过5.6-11公式滤波滤波图像');
subplot(2,2,3)
imshow(g1,[])
title('在模糊图像基础上增加高斯噪声');
subplot(2,2,4)
imshow(g4,[])
title('使用最小二乘恢复图像');
end
% saveas(gcf,'6.png')

